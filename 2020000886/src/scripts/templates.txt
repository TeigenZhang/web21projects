DELETE FROM dv.account_verification WHERE id = $#
INSERT INTO dv.account (id, username, email, salt, hashpassword, neighborhood, nearbylistview, needaseat, isblind, iscane, iscognitive, isdeaf, iswheelchair, isotherdisability, creation, device_id, session_id, firstname, lastname, verified) VALUES
INSERT INTO dv.account_verification (code, user_id) VALUES
INSERT INTO dv.notes_message (agency_id, agency_id_id, user_id, category, route_id, notice_id, message_url, start_date, end_date, message) VALUES
INSERT INTO dv.notes_message (agency_id, agency_id_id, user_id, category, stop_id, notice_id, message_url, start_date, end_date, message) VALUES
INSERT INTO m.app_state_log (device_id, state_type, stamp) VALUES
INSERT INTO m.avl (agency_id, trip_id, route_id, avl_lat, avl_lon, vehicle_id, destination_id, avl_time_hour, avl_time_minute, avl_date, route_short_name, block_ref) VALUES
INSERT INTO m.call_log (device_id, servlet_path, url, session_id) VALUES
INSERT INTO m.screen_log (device_id, screen, stamp) VALUES
INSERT INTO m.status (agency_id, schedulecount, historicalcount, realtimecount, recordcount, usecount, recordpoint, usepoint, pointcategory, restricted, recordingtime, session_id, device_id, os_version, old_id, app_version, ad_category, voice_over) VALUES
INSERT INTO m.stop_view_log (device_id, agency_id, stop_id, favorite, stamp) VALUES
INSERT INTO m.trace (agency_id, session_id, user_id, trace_lat, trace_lon, trip_id, fullness, trace_time_hour, trace_time_minute, trace_time_second, origin_id, destination_id, trace_date, total_points, current_points, vertical_accuracy, horizontal_accuracy, heading, heading_accuracy, raw_heading_x, raw_heading_y, raw_heading_z, rotation_roll, rotation_pitch, rotation_yaw, acceleration_x, acceleration_y, acceleration_z, device_id, route_short_name, route_long_name, session_record_counter, source) VALUES
INSERT INTO m.user_stop_history (agency_id, device_id, stop_id, latitude, longitude) values ($#, $#, $#, $#, $#) 
SELECT # AS profile_category, z.category, z.message_id, z.message, z.timestamp, z.like_count, z.dislike_count, z.comment_count, z.stop_id, z.route_id, z.trip_id, z.stop_name, z.route_short_name, z.reply_to, na.id AS attachment_id, a.id AS user_id, a.firstname AS first_name, a.lastname AS last_name, nl.like_opt AS like, a.neighborhood AS user_neighborhood FROM (SELECT nm.category, nm.id AS message_id, nm.user_id, nm.message, nm.timestamp, nm.like_count, nm.dislike_count, nm.comment_count, nm.stop_id, nm.trip_id, nm.reply_to, nm.agency_id , rt.route_id, # AS stop_name, rt.route_short_name FROM dv.notes_message nm LEFT JOIN m.route rt ON rt.route_id = nm.route_id AND nm.agency_id = rt.agency_id WHERE nm.route_id IS NOT # AND nm.deleted IS # UNION SELECT nm.category, nm.id AS message_id, nm.user_id, nm.message, nm.timestamp, nm.like_count, nm.dislike_count, nm.comment_count, nm.stop_id, nm.trip_id, nm.reply_to, nm.agency_id , rt.route_id, # AS stop_name, rt.route_short_name FROM dv.notes_message nm LEFT JOIN m.trip tr ON tr.trip_id = nm.trip_id, m.route rt WHERE nm.trip_id IS NOT # AND nm.deleted IS # AND tr.route_id = rt.route_id AND nm.agency_id = rt.agency_id AND rt.agency_id = tr.agency_id UNION SELECT nm.category, nm.id AS message_id, nm.user_id, nm.message, nm.timestamp, nm.like_count, nm.dislike_count, nm.comment_count, nm.stop_id, nm.trip_id, nm.reply_to, nm.agency_id , nm.route_id, st.stop_name, # AS route_short_name FROM dv.notes_message nm LEFT JOIN m.stop st ON nm.agency_id = st.agency_id AND nm.stop_id = st.stop_id WHERE nm.stop_id IS NOT # AND nm.deleted IS #) as z LEFT JOIN dv.account a ON z.user_id = a.id LEFT JOIN dv.notes_attachment na ON z.message_id = na.message_id LEFT JOIN dv.notes_like nl ON z.message_id = nl.message_id WHERE z.agency_id IN (SELECT agency_id FROM m.agency WHERE agency_id_id = (SELECT agency_id_id FROM m.agency where agency_id = $#) ) AND nl.user_id = $# AND z.reply_to = # ORDER BY timestamp DESC LIMIT #
SELECT # AS profile_category, z.category, z.message_id, z.message, z.timestamp, z.like_count, z.dislike_count, z.comment_count, z.stop_id, z.route_id, z.trip_id, z.stop_name, z.route_short_name, z.reply_to, na.id AS attachment_id, a.id AS user_id, a.firstname AS first_name, a.lastname AS last_name, nl.like_opt AS like, a.neighborhood AS user_neighborhood FROM (SELECT nm.category, nm.id AS message_id, nm.user_id, nm.message, nm.timestamp, nm.like_count, nm.dislike_count, nm.comment_count, nm.stop_id, nm.trip_id, nm.reply_to, nm.agency_id , rt.route_id, # AS stop_name, rt.route_short_name FROM dv.notes_message nm LEFT JOIN m.route rt ON rt.route_id = nm.route_id AND nm.agency_id = rt.agency_id WHERE nm.route_id IS NOT # AND nm.deleted IS # UNION SELECT nm.category, nm.id AS message_id, nm.user_id, nm.message, nm.timestamp, nm.like_count, nm.dislike_count, nm.comment_count, nm.stop_id, nm.trip_id, nm.reply_to, nm.agency_id , rt.route_id, # AS stop_name, rt.route_short_name FROM dv.notes_message nm LEFT JOIN m.trip tr ON tr.trip_id = nm.trip_id, m.route rt WHERE nm.trip_id IS NOT # AND nm.deleted IS # AND tr.route_id = rt.route_id AND nm.agency_id = rt.agency_id AND rt.agency_id = tr.agency_id UNION SELECT nm.category, nm.id AS message_id, nm.user_id, nm.message, nm.timestamp, nm.like_count, nm.dislike_count, nm.comment_count, nm.stop_id, nm.trip_id, nm.reply_to, nm.agency_id , nm.route_id, st.stop_name, # AS route_short_name FROM dv.notes_message nm LEFT JOIN m.stop st ON nm.agency_id = st.agency_id AND nm.stop_id = st.stop_id WHERE nm.stop_id IS NOT # AND nm.deleted IS #) as z LEFT JOIN dv.account a ON z.user_id = a.id LEFT JOIN dv.notes_attachment na ON z.message_id = na.message_id LEFT JOIN dv.notes_like nl ON z.message_id = nl.message_id WHERE z.agency_id IN (SELECT agency_id FROM m.agency WHERE agency_id_id = (SELECT agency_id_id FROM m.agency where agency_id = $#) ) AND z.user_id = $# AND z.reply_to = # ORDER BY timestamp DESC LIMIT #
SELECT # AS profile_category, z.category, z.message_id, z.message, z.timestamp, z.like_count, z.dislike_count, z.comment_count, z.stop_id, z.route_id, z.trip_id, z.stop_name, z.route_short_name, z.reply_to, na.id AS attachment_id, a.id AS user_id, a.firstname AS first_name, a.lastname AS last_name, nl.like_opt AS like, a.neighborhood AS user_neighborhood FROM (SELECT nm.category, nm.id AS message_id, nm.user_id, nm.message, nm.timestamp, nm.like_count, nm.dislike_count, nm.comment_count, nm.stop_id, nm.trip_id, nm.reply_to, nm.agency_id , rt.route_id, # AS stop_name, rt.route_short_name FROM dv.notes_message nm LEFT JOIN m.route rt ON rt.route_id = nm.route_id AND nm.agency_id = rt.agency_id WHERE nm.route_id IS NOT # AND nm.deleted IS # UNION SELECT nm.category, nm.id AS message_id, nm.user_id, nm.message, nm.timestamp, nm.like_count, nm.dislike_count, nm.comment_count, nm.stop_id, nm.trip_id, nm.reply_to, nm.agency_id , rt.route_id, # AS stop_name, rt.route_short_name FROM dv.notes_message nm LEFT JOIN m.trip tr ON tr.trip_id = nm.trip_id, m.route rt WHERE nm.trip_id IS NOT # AND nm.deleted IS # AND tr.route_id = rt.route_id AND nm.agency_id = rt.agency_id AND rt.agency_id = tr.agency_id UNION SELECT nm.category, nm.id AS message_id, nm.user_id, nm.message, nm.timestamp, nm.like_count, nm.dislike_count, nm.comment_count, nm.stop_id, nm.trip_id, nm.reply_to, nm.agency_id , nm.route_id, st.stop_name, # AS route_short_name FROM dv.notes_message nm LEFT JOIN m.stop st ON nm.agency_id = st.agency_id AND nm.stop_id = st.stop_id WHERE nm.stop_id IS NOT # AND nm.deleted IS #) as z LEFT JOIN dv.account a ON z.user_id = a.id LEFT JOIN dv.notes_attachment na ON z.message_id = na.message_id LEFT JOIN dv.notes_like nl ON z.message_id = nl.message_id WHERE z.agency_id IN (SELECT agency_id FROM m.agency WHERE agency_id_id = (SELECT agency_id_id FROM m.agency where agency_id = $#) ) AND z.user_id = $# AND z.reply_to< ># ORDER BY timestamp DESC LIMIT #
SELECT ( (des.arrival_time_hour-cur.arrival_time_hour) *#+ (des.arrival_time_minute-cur.arrival_time_minute) ) as minsToDestination, (des.stop_sequence - cur.stop_sequence +#) as stopsToDest FROM m.stop_time cur, m.stop_time des WHERE cur.agency_id = $# AND cur.agency_id = des.agency_id AND cur.trip_id = $# AND cur.trip_id = des.trip_id AND cur.stop_id = $# AND des.stop_id = $# 
SELECT * FROM dv.account_verification WHERE user_id = #
SELECT * FROM dv.attachment WHERE observation_id = $#
SELECT * FROM m.agency WHERE agency_id_id = # ORDER BY agency_id DESC;
SELECT COUNT (*) FROM (SELECT device_id, session_id FROM m.trace GROUP BY device_id, session_id, DATE_PART (#, stamp) ) AS z) WHERE agency_id_id = #;
SELECT COUNT (*) FROM dv.notes_message WHERE agency_id_id = # AND notice_id = # AND stop_id = #;
SELECT COUNT (*) FROM dv.notes_message WHERE user_id = # AND agency_id_id = # AND notice_id = # AND route_id = #;
SELECT COUNT (*) FROM dv.notes_message WHERE user_id = None AND agency_id_id = # AND notice_id = # AND route_id = #;
SELECT COUNT (*) FROM pg_stat_activity;
SELECT DISTINCT agency_timezone FROM m.agency WHERE agency_id = $#
SELECT DISTINCT ea.agency_id, c.start_date FROM m.agency a, m.agency ea, m.calendar c WHERE a.agency_id = # AND ea.agency_id_id = a.agency_id_id AND ea.agency_id = c.agency_id AND ( (SELECT extract (epoch FROM c.start_date) *#) ) < = # AND ( (SELECT extract (epoch FROM c.end_date +#) *#) ) > = # 
SELECT DISTINCT ea.agency_id, c.start_date FROM m.agency a, m.agency ea, m.calendar c WHERE a.agency_id = $# AND ea.agency_id_id = a.agency_id_id AND ea.agency_id = c.agency_id AND ( (SELECT extract (epoch FROM c.start_date) *#) ) < = $# AND ( (SELECT extract (epoch FROM c.end_date +#) *#) ) > = $# 
SELECT DISTINCT r.route_id AS route_id, r.route_short_name AS route_short_name, r.route_long_name AS route_long_name, t.direction_id AS direction_id FROM m.route r INNER JOIN m.trip t ON r.route_id = t.route_id AND r.agency_id = t.agency_id WHERE r.agency_id = $# ORDER BY r.route_id, t.direction_id
SELECT a.agency_timezone FROM m.agency a WHERE a.agency_id = # 
SELECT a.agency_timezone FROM m.agency a WHERE a.agency_id = $# 
SELECT agency_id FROM m.agency WHERE agency_id_id = # AND valid_now = #
SELECT agency_id FROM m.agency WHERE valid_now = # AND agency_id_id = # ORDER BY agency_id DESC LIMIT #
SELECT agency_id FROM m.agency WHERE valid_now = # AND agency_id_id = #;
SELECT attname, attacl FROM pg_catalog.pg_attribute WHERE attrelid = # AND NOT attisdropped AND attacl IS NOT # ORDER BY attnum
SELECT c.tableoid, c.oid, c.relname, c.relacl, c.relkind, c.relnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = c.relowner) AS rolname, c.relchecks, c.relhastriggers, c.relhasindex, c.relhasrules, c.relhasoids, c.relfrozenxid, c.relminmxid, tc.oid AS toid, tc.relfrozenxid AS tfrozenxid, tc.relminmxid AS tminmxid, c.relpersistence, c.relispopulated, c.relreplident, c.relpages, CASE WHEN c.reloftype < > # THEN c.reloftype::pg_catalog.regtype ELSE # END AS reloftype, d.refobjid AS owning_tab, d.refobjsubid AS owning_col, (SELECT spcname FROM pg_tablespace t WHERE t.oid = c.reltablespace) AS reltablespace, array_to_string (array_remove (array_remove (c.reloptions, #) , #) , #) AS reloptions, CASE WHEN # = ANY (c.reloptions) THEN #::text WHEN # = ANY (c.reloptions) THEN #::text ELSE # END AS checkoption, array_to_string (array (SELECT # || x FROM unnest (tc.reloptions) x) , #) AS toast_reloptions FROM pg_class c LEFT JOIN pg_depend d ON (c.relkind = # AND d.classid = c.tableoid AND d.objid = c.oid AND d.objsubid = # AND d.refclassid = c.tableoid AND d.deptype = #) LEFT JOIN pg_class tc ON (c.reltoastrelid = tc.oid) WHERE c.relkind IN () ORDER BY c.oid
SELECT category, COALESCE (cnt, #) AS cnt, COALESCE (max, #) AS max, COALESCE (avg, #) AS avg FROM (SELECT unnest (ARRAY[#, #, #, #, #, #]) AS #category#, unnest (ARRAY[SUM (ac.lookup) , SUM (ac.spot) , SUM (ac.trace_session) , SUM (ac.note) , SUM (ac.comment) , SUM (ac.agree) ]) AS #cnt # FROM s.activity ac, m.agency a WHERE a.agency_id = $# AND ac.agency_id_id = a.agency_id_id AND ac.user_id = $# GROUP BY ac.agency_id_id, ac.user_id) individual NATURAL FULL JOIN (SELECT DISTINCT ag_max.category AS category, ag_max.cnt AS max, ag_avg.cnt AS avg FROM s.activity ac, s.aggregate ag_max, s.aggregate ag_avg, m.agency a WHERE ag_max.category IN () AND ag_max.category = ag_avg.category AND ag_max.type = # AND ag_avg.type = # AND a.agency_id = $# AND a.agency_id_id = ag_max.agency_id_id AND ag_max.agency_id_id = ag_avg.agency_id_id) statistic
SELECT category, COALESCE (cnt, #) AS cnt, COALESCE (max, #) AS max, COALESCE (avg, #) AS avg FROM (SELECT unnest (ARRAY[#, #, #, #, #, #]) AS #category#, unnest (ARRAY[ac.lookup, ac.spot, ac.trace_session, ac.note, ac.comment, ac.agree]) AS #cnt # FROM s.activity ac, m.agency a WHERE a.agency_id = $# AND ac.agency_id_id = a.agency_id_id AND ac.device_id = $#) individual NATURAL FULL JOIN (SELECT DISTINCT ag_max.category AS category, ag_max.cnt AS max, ag_avg.cnt AS avg FROM s.activity ac, s.aggregate ag_max, s.aggregate ag_avg, m.agency a WHERE ag_max.category IN () AND ag_max.category = ag_avg.category AND ag_max.type = # AND ag_avg.type = # AND a.agency_id = $# AND a.agency_id_id = ag_max.agency_id_id AND ag_max.agency_id_id = ag_avg.agency_id_id) statistic
SELECT classid, objid, refclassid, refobjid FROM pg_depend WHERE refclassid = #::regclass AND deptype = # ORDER BY #, #
SELECT classid, objid, refclassid, refobjid, deptype FROM pg_depend WHERE deptype ! = # AND deptype ! = # ORDER BY #, #
SELECT conrelid, confrelid FROM pg_constraint JOIN pg_depend ON (objid = confrelid) WHERE contype = # AND refclassid = #::regclass AND classid = #::regclass;
SELECT description, classoid, objoid, objsubid FROM pg_catalog.pg_description ORDER BY classoid, objoid, objsubid
SELECT distinct a.agency_id FROM m.agency a, m.calendar c, m.trip t WHERE c.agency_id = a.agency_id AND t.agency_id = a.agency_id AND a.avl_agency_name = # AND t.trip_id = # AND ( (SELECT extract (epoch FROM c.start_date) *#) ) < = # AND ( (SELECT extract (epoch FROM c.end_date+#) *#) ) > = # 
SELECT distinct a.agency_id, a.agency_name, a.agency_phone, a.show_in_out, ra.agency_lat, ra.agency_lon, max (c.end_date) as effective FROM m.agency a, m.region_agency ra, m.calendar c WHERE c.agency_id = a.agency_id AND ( (SELECT extract (epoch FROM c.start_date) *#) ) < = $# AND ( (SELECT extract (epoch FROM c.end_date+#) *#) ) > = $# AND a.agency_id_id = ra.agency_id_id and a.region_id = $# GROUP BY a.agency_id, a.agency_name, a.agency_phone, a.show_in_out, ra.agency_lat, ra.agency_lon
SELECT ds.stop_id AS stop_id, ds.stop_name, ds.stop_lat, ds.stop_lon FROM m.stop ds, m.stop os, m.trip t, m.stop_time st, m.stop_time ost WHERE t.trip_id = $# AND st.trip_id = t.trip_id AND ds.stop_id = st.stop_id AND ds.agency_id = $# AND os.agency_id = ds.agency_id AND t.agency_id = ds.agency_id AND st.agency_id = ds.agency_id AND ost.agency_id = ds.agency_id AND os.stop_id = $# AND ost.stop_id = os.stop_id AND ost.trip_id = t.trip_id AND st.stop_sequence > ost.stop_sequence ORDER BY st.stop_sequence
SELECT fdwname FROM pg_foreign_data_wrapper w WHERE w.oid = #
SELECT hashpassword, salt, verified FROM dv.account WHERE email = $#
SELECT id AS user_id, firstname, lastname, neighborhood, nearbylistview, needaseat, isblind, iscane, iscognitive, isdeaf, iswheelchair, isotherdisability, verified FROM dv.account WHERE email = $#
SELECT id, like_opt FROM dv.notes_like WHERE user_id = $# AND message_id = $#
SELECT id, message_title, message, destination_screen, stamp FROM m.messages WHERE (device = $# OR device IS #) AND (agency_id = $# OR agency_id IS #) AND (device_id = $# OR device_id IS #) AND (app_version = $# OR app_version IS #) AND (NOW () > = start_date OR start_date IS #) AND (NOW () < end_date OR end_date IS #) AND (trigger_cond = $# OR trigger_cond IS #) AND (SELECT COUNT (*) FROM m.popup_user_log WHERE device_id = $# AND date_trunc (#, stamp) = CURRENT_DATE) < #ORDER BY num_conditions DESC LIMIT #
SELECT inhrelid, inhparent FROM pg_inherits
SELECT label, provider, classoid, objoid, objsubid FROM pg_catalog.pg_seclabel ORDER BY classoid, objoid, objsubid
SELECT last_value, is_called FROM about_id_seq
SELECT last_value, is_called FROM account_role_id_seq
SELECT last_value, is_called FROM account_verification_id_seq
SELECT last_value, is_called FROM agency_id_seq
SELECT last_value, is_called FROM attachment_id_seq
SELECT last_value, is_called FROM avl_id_seq
SELECT last_value, is_called FROM avl_pred_id_seq
SELECT last_value, is_called FROM calendar_date_id_seq
SELECT last_value, is_called FROM calendar_id_seq
SELECT last_value, is_called FROM comment_id_seq
SELECT last_value, is_called FROM driver_id_seq
SELECT last_value, is_called FROM entity_id_seq
SELECT last_value, is_called FROM fare_attribute_id_seq
SELECT last_value, is_called FROM fare_rule_id_seq
SELECT last_value, is_called FROM folder_id_seq
SELECT last_value, is_called FROM frequency_id_seq
SELECT last_value, is_called FROM notes_attachment_id_seq
SELECT last_value, is_called FROM notes_like_id_seq
SELECT last_value, is_called FROM notes_message_id_seq
SELECT last_value, is_called FROM observation_attachment_id_seq
SELECT last_value, is_called FROM observation_driver_id_seq
SELECT last_value, is_called FROM observation_entity_id_seq
SELECT last_value, is_called FROM observation_id_seq
SELECT last_value, is_called FROM observation_stop_id_seq
SELECT last_value, is_called FROM observation_vehicle_id_seq
SELECT last_value, is_called FROM password_reset_id_seq
SELECT last_value, is_called FROM rider_id_seq
SELECT last_value, is_called FROM route_id_seq
SELECT last_value, is_called FROM shape_id_seq
SELECT last_value, is_called FROM status_id_seq
SELECT last_value, is_called FROM stop_id_seq
SELECT last_value, is_called FROM stop_time_id_seq
SELECT last_value, is_called FROM trace_id_seq
SELECT last_value, is_called FROM transfer_id_seq
SELECT last_value, is_called FROM trip_id_seq
SELECT last_value, is_called FROM user_stop_history_id_seq
SELECT last_value, is_called FROM vehicle_id_seq
SELECT nm.id AS message_id, nm.message, nm.timestamp, nm.category, nm.like_count, nm.dislike_count, nm.comment_count, na.id AS attachment_id, a.id AS user_id, a.firstname AS first_name, a.lastname AS last_name, a.neighborhood AS user_neighborhood , COALESCE (nl.like_opt, #) AS like , nm.reply_to , s.stop_id, s.stop_name FROM dv.notes_message nm LEFT JOIN dv.account a ON nm.user_id = a.id LEFT JOIN dv.notes_attachment na ON nm.id = na.message_id LEFT JOIN dv.notes_like AS nl ON nl.message_id = nm.id AND nl.user_id = $# LEFT JOIN m.stop s ON nm.stop_id = s.stop_id AND s.agency_id = nm.agency_id WHERE nm.deleted IS # AND nm.agency_id IN (SELECT agency_id FROM m.agency WHERE agency_id_id IN () ) AND (a.verified IS NOT # OR nm.user_id = $#) AND nm.category::text = $# AND (nm.reply_to = $# OR nm.id = $#) ORDER BY timestamp DESC LIMIT $# 
SELECT nm.id AS message_id, nm.message, nm.timestamp, nm.category, nm.like_count, nm.dislike_count, nm.comment_count, na.id AS attachment_id, a.id AS user_id, a.firstname AS first_name, a.lastname AS last_name, a.neighborhood AS user_neighborhood , COALESCE (nl.like_opt, #) AS like , s.stop_id, s.stop_name FROM dv.notes_message nm LEFT JOIN dv.account a ON nm.user_id = a.id LEFT JOIN dv.notes_attachment na ON nm.id = na.message_id LEFT JOIN dv.notes_like AS nl ON nl.message_id = nm.id AND nl.user_id = $# LEFT JOIN m.stop s ON nm.stop_id = s.stop_id AND s.agency_id = nm.agency_id WHERE nm.deleted IS # AND nm.agency_id IN (SELECT agency_id FROM m.agency WHERE agency_id_id IN () ) AND (a.verified IS NOT # OR nm.user_id = $#) AND nm.category::text = $# AND nm.reply_to = $# AND nm.stop_id = $# ORDER BY timestamp DESC LIMIT $# 
SELECT nm.id AS message_id, nm.message, nm.timestamp, nm.category, nm.like_count, nm.dislike_count, nm.comment_count, na.id AS attachment_id, a.id AS user_id, a.firstname AS first_name, a.lastname AS last_name, a.neighborhood AS user_neighborhood , COALESCE (nl.like_opt, #) AS like , t.trip_id, t.route_id, r.route_short_name, t.direction_id FROM dv.notes_message nm LEFT JOIN dv.account a ON nm.user_id = a.id LEFT JOIN dv.notes_attachment na ON nm.id = na.message_id LEFT JOIN dv.notes_like AS nl ON nl.message_id = nm.id AND nl.user_id = $# LEFT JOIN m.trip t ON nm.trip_id = t.trip_id AND t.agency_id = nm.agency_id LEFT JOIN m.route r ON t.route_id = r.route_id AND t.agency_id = r.agency_id WHERE nm.deleted IS # AND nm.agency_id IN (SELECT agency_id FROM m.agency WHERE agency_id_id IN () ) AND (a.verified IS NOT # OR nm.user_id = $#) AND nm.category::text = $# AND nm.reply_to = $# AND nm.trip_id = $# ORDER BY timestamp DESC LIMIT $# 
SELECT nm.id AS message_id, nm.message, nm.timestamp, nm.category, nm.like_count, nm.dislike_count, nm.comment_count, na.id AS attachment_id, a.id AS user_id, a.firstname AS first_name, a.lastname AS last_name, a.neighborhood AS user_neighborhood , COALESCE (nl.like_opt, #) AS like FROM dv.notes_message nm LEFT JOIN dv.account a ON nm.user_id = a.id LEFT JOIN dv.notes_attachment na ON nm.id = na.message_id LEFT JOIN dv.notes_like AS nl ON nl.message_id = nm.id AND nl.user_id = $# WHERE nm.deleted IS # AND nm.agency_id IN (SELECT agency_id FROM m.agency WHERE agency_id_id IN () ) AND (a.verified IS NOT # OR nm.user_id = $#) AND nm.category::text = $# AND nm.reply_to = $# ORDER BY timestamp DESC LIMIT $# 
SELECT nm.id AS message_id, nm.message, nm.timestamp, nm.category, nm.like_count, nm.dislike_count, nm.comment_count, na.id AS attachment_id, a.id AS user_id, a.firstname AS first_name, a.lastname AS last_name, a.neighborhood AS user_neighborhood , nm.reply_to , s.stop_id, s.stop_name FROM dv.notes_message nm LEFT JOIN dv.account a ON nm.user_id = a.id LEFT JOIN dv.notes_attachment na ON nm.id = na.message_id LEFT JOIN m.stop s ON nm.stop_id = s.stop_id AND s.agency_id = nm.agency_id WHERE nm.deleted IS # AND nm.agency_id IN (SELECT agency_id FROM m.agency WHERE agency_id_id IN () ) AND a.verified IS NOT # AND nm.category::text = $# AND (nm.reply_to = $# OR nm.id = $#) ORDER BY timestamp DESC LIMIT $# 
SELECT nm.id AS message_id, nm.message, nm.timestamp, nm.category, nm.like_count, nm.dislike_count, nm.comment_count, na.id AS attachment_id, a.id AS user_id, a.firstname AS first_name, a.lastname AS last_name, a.neighborhood AS user_neighborhood , r.route_id, r.route_short_name FROM dv.notes_message nm LEFT JOIN dv.account a ON nm.user_id = a.id LEFT JOIN dv.notes_attachment na ON nm.id = na.message_id LEFT JOIN m.route r ON nm.route_id = r.route_id AND r.agency_id = nm.agency_id WHERE nm.deleted IS # AND nm.agency_id IN (SELECT agency_id FROM m.agency WHERE agency_id_id IN () ) AND a.verified IS NOT # AND (nm.category::text = # OR (nm.category::text = # AND (age (now () , nm.timestamp) ) < interval #) ) AND nm.reply_to = $# ORDER BY timestamp DESC LIMIT $# 
SELECT nm.id AS message_id, nm.message, nm.timestamp, nm.category, nm.like_count, nm.dislike_count, nm.comment_count, na.id AS attachment_id, a.id AS user_id, a.firstname AS first_name, a.lastname AS last_name, a.neighborhood AS user_neighborhood , s.stop_id, s.stop_name FROM dv.notes_message nm LEFT JOIN dv.account a ON nm.user_id = a.id LEFT JOIN dv.notes_attachment na ON nm.id = na.message_id LEFT JOIN m.stop s ON nm.stop_id = s.stop_id AND s.agency_id = nm.agency_id WHERE nm.deleted IS # AND nm.agency_id IN (SELECT agency_id FROM m.agency WHERE agency_id_id IN () ) AND a.verified IS NOT # AND nm.category::text = $# AND nm.reply_to = $# AND nm.stop_id = $# ORDER BY timestamp DESC LIMIT $# 
SELECT nm.id AS message_id, nm.message, nm.timestamp, nm.category, nm.like_count, nm.dislike_count, nm.comment_count, na.id AS attachment_id, a.id AS user_id, a.firstname AS first_name, a.lastname AS last_name, a.neighborhood AS user_neighborhood , s.stop_id, s.stop_name FROM dv.notes_message nm LEFT JOIN dv.account a ON nm.user_id = a.id LEFT JOIN dv.notes_attachment na ON nm.id = na.message_id LEFT JOIN m.stop s ON nm.stop_id = s.stop_id AND s.agency_id = nm.agency_id WHERE nm.deleted IS # AND nm.agency_id IN (SELECT agency_id FROM m.agency WHERE agency_id_id IN () ) AND a.verified IS NOT # AND nm.category::text = $# AND nm.reply_to = $# ORDER BY timestamp DESC LIMIT $# 
SELECT nm.id AS message_id, nm.message, nm.timestamp, nm.category, nm.like_count, nm.dislike_count, nm.comment_count, na.id AS attachment_id, a.id AS user_id, a.firstname AS first_name, a.lastname AS last_name, a.neighborhood AS user_neighborhood , t.trip_id, t.route_id, r.route_short_name, t.direction_id FROM dv.notes_message nm LEFT JOIN dv.account a ON nm.user_id = a.id LEFT JOIN dv.notes_attachment na ON nm.id = na.message_id LEFT JOIN m.trip t ON nm.trip_id = t.trip_id AND t.agency_id = nm.agency_id LEFT JOIN m.route r ON t.route_id = r.route_id AND t.agency_id = r.agency_id WHERE nm.deleted IS # AND nm.agency_id IN (SELECT agency_id FROM m.agency WHERE agency_id_id IN () ) AND a.verified IS NOT # AND nm.category::text = $# AND nm.reply_to = $# AND nm.trip_id = $# ORDER BY timestamp DESC LIMIT $# 
SELECT nm.id AS message_id, nm.message, nm.timestamp, nm.category, nm.like_count, nm.dislike_count, nm.comment_count, na.id AS attachment_id, a.id AS user_id, a.firstname AS first_name, a.lastname AS last_name, a.neighborhood AS user_neighborhood FROM dv.notes_message nm LEFT JOIN dv.account a ON nm.user_id = a.id LEFT JOIN dv.notes_attachment na ON nm.id = na.message_id WHERE nm.deleted IS # AND nm.agency_id IN (SELECT agency_id FROM m.agency WHERE agency_id_id IN () ) AND a.verified IS NOT # AND nm.category::text = $# AND nm.reply_to = $# ORDER BY timestamp DESC LIMIT $# 
SELECT oid, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = lomowner) AS rolname, lomacl FROM pg_largeobject_metadata
SELECT oid, enumlabel FROM pg_catalog.pg_enum WHERE enumtypid = #ORDER BY enumsortorder
SELECT oid, tableoid, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = defaclrole) AS defaclrole, defaclnamespace, defaclobjtype, defaclacl FROM pg_default_acl
SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.monday = # AND c.service_id = t.service_id AND (ost.arrival_time_hour*#+ost.arrival_time_minute - $#) < =# UNION SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # AND (ost.arrival_time_hour*#+ost.arrival_time_minute - $#) < =#) EXCEPT SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # AND (ost.arrival_time_hour*#+ost.arrival_time_minute - $#) < =#) SELECT t1.stop_id, t1.stop_name, t1.route_id, t1.route_short_name, t1.route_long_name, t1.direction_id, t1.trip_id, t1.trip_headsign, floor (t1.departure_time_relative) as departure_time_relative, t1.distance_to_stop, t1.estimate_source, t1.fullness FROM t1, (SELECT sg.stop_id, sg.stop_name, sg.route_id, sg.direction_id, MIN (abs (sg.departure_time_relative) +random () ) as departure_time_relative FROM t1 as sg GROUP BY sg.stop_id, sg.stop_name, sg.route_id, sg.direction_id) as t2 WHERE t1.stop_id = t2.stop_id AND t1.route_id = t2.route_id AND abs (t1.departure_time_relative) = floor (t2.departure_time_relative) AND t1.direction_id = t2.direction_id ORDER BY t1.distance_to_stop, t1.route_short_name, t1.departure_time_relative ASC
SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.thursday = # AND c.service_id = t.service_id AND (ost.arrival_time_hour*#+ost.arrival_time_minute - $#) < =# UNION SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # AND (ost.arrival_time_hour*#+ost.arrival_time_minute - $#) < =#) EXCEPT SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # AND (ost.arrival_time_hour*#+ost.arrival_time_minute - $#) < =#) SELECT t1.stop_id, t1.stop_name, t1.route_id, t1.route_short_name, t1.route_long_name, t1.direction_id, t1.trip_id, t1.trip_headsign, floor (t1.departure_time_relative) as departure_time_relative, t1.distance_to_stop, t1.estimate_source, t1.fullness FROM t1, (SELECT sg.stop_id, sg.stop_name, sg.route_id, sg.direction_id, MIN (abs (sg.departure_time_relative) +random () ) as departure_time_relative FROM t1 as sg GROUP BY sg.stop_id, sg.stop_name, sg.route_id, sg.direction_id) as t2 WHERE t1.stop_id = t2.stop_id AND t1.route_id = t2.route_id AND abs (t1.departure_time_relative) = floor (t2.departure_time_relative) AND t1.direction_id = t2.direction_id ORDER BY t1.distance_to_stop, t1.route_short_name, t1.departure_time_relative ASC
SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.friday = # AND c.end_date > = CURRENT_DATE AND c.start_date < = CURRENT_DATE AND c.service_id = t.service_id UNION SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) SELECT t1.stop_id, t1.stop_name, t1.route_id, t1.route_short_name, t1.route_long_name, t1.direction_id, t1.trip_id, t1.trip_headsign, floor (t1.departure_time_relative) as departure_time_relative, t1.distance_to_stop, t1.estimate_source, t1.fullness FROM t1 ORDER BY t1.distance_to_stop, t1.route_short_name, t1.departure_time_relative
SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.monday = # AND c.end_date > = CURRENT_DATE AND c.start_date < = CURRENT_DATE AND c.service_id = t.service_id UNION SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) SELECT t1.stop_id, t1.stop_name, t1.route_id, t1.route_short_name, t1.route_long_name, t1.direction_id, t1.trip_id, t1.trip_headsign, floor (t1.departure_time_relative) as departure_time_relative, t1.distance_to_stop, t1.estimate_source, t1.fullness FROM t1 ORDER BY t1.distance_to_stop, t1.route_short_name, t1.departure_time_relative
SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.saturday = # AND c.end_date > = CURRENT_DATE AND c.start_date < = CURRENT_DATE AND c.service_id = t.service_id UNION SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) SELECT t1.stop_id, t1.stop_name, t1.route_id, t1.route_short_name, t1.route_long_name, t1.direction_id, t1.trip_id, t1.trip_headsign, floor (t1.departure_time_relative) as departure_time_relative, t1.distance_to_stop, t1.estimate_source, t1.fullness FROM t1 ORDER BY t1.distance_to_stop, t1.route_short_name, t1.departure_time_relative
SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.sunday = # AND c.end_date > = CURRENT_DATE AND c.start_date < = CURRENT_DATE AND c.service_id = t.service_id UNION SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) SELECT t1.stop_id, t1.stop_name, t1.route_id, t1.route_short_name, t1.route_long_name, t1.direction_id, t1.trip_id, t1.trip_headsign, floor (t1.departure_time_relative) as departure_time_relative, t1.distance_to_stop, t1.estimate_source, t1.fullness FROM t1 ORDER BY t1.distance_to_stop, t1.route_short_name, t1.departure_time_relative
SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.thursday = # AND c.end_date > = CURRENT_DATE AND c.start_date < = CURRENT_DATE AND c.service_id = t.service_id UNION SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) SELECT t1.stop_id, t1.stop_name, t1.route_id, t1.route_short_name, t1.route_long_name, t1.direction_id, t1.trip_id, t1.trip_headsign, floor (t1.departure_time_relative) as departure_time_relative, t1.distance_to_stop, t1.estimate_source, t1.fullness FROM t1 ORDER BY t1.distance_to_stop, t1.route_short_name, t1.departure_time_relative
SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.tuesday = # AND c.end_date > = CURRENT_DATE AND c.start_date < = CURRENT_DATE AND c.service_id = t.service_id UNION SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) SELECT t1.stop_id, t1.stop_name, t1.route_id, t1.route_short_name, t1.route_long_name, t1.direction_id, t1.trip_id, t1.trip_headsign, floor (t1.departure_time_relative) as departure_time_relative, t1.distance_to_stop, t1.estimate_source, t1.fullness FROM t1 ORDER BY t1.distance_to_stop, t1.route_short_name, t1.departure_time_relative
SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.wednesday = # AND c.end_date > = CURRENT_DATE AND c.start_date < = CURRENT_DATE AND c.service_id = t.service_id UNION SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT os.stop_id, os.stop_name, r.route_id, r.route_short_name, r.route_long_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, h.distance (os.stop_lat, os.stop_lon, $#, $#) AS distance_to_stop, ost.estimate_source AS estimate_source, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id IN (SELECT s.stop_id AS stop_id FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY h.distance (s.stop_lat, s.stop_lon, $#, $#) LIMIT #) AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) SELECT t1.stop_id, t1.stop_name, t1.route_id, t1.route_short_name, t1.route_long_name, t1.direction_id, t1.trip_id, t1.trip_headsign, floor (t1.departure_time_relative) as departure_time_relative, t1.distance_to_stop, t1.estimate_source, t1.fullness FROM t1 ORDER BY t1.distance_to_stop, t1.route_short_name, t1.departure_time_relative
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.friday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.monday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.saturday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.sunday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.thursday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.tuesday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.wednesday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, os.stop_id, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.friday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.monday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.saturday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.sunday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.thursday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.tuesday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar c WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND c.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND c.wednesday = # AND c.service_id = t.service_id UNION SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) > = $# AND (ost.departure_time_hour*#*# + ost.departure_time_minute*#) < = $# AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = #) EXCEPT SELECT ost.estimate_source, r.route_id, r.route_short_name, r.route_long_name, os.stop_name, t.trip_id AS trip_id, t.trip_headsign AS trip_headsign, t.direction_id, (ost.departure_time_hour*#+ost.departure_time_minute - $#) AS departure_time_relative, ceiling ((h.distance (#, #, os.stop_lat, os.stop_lon) /#) /#) AS walk_time, CASE ost.fullness IS # WHEN true THEN # ELSE ost.fullness END FROM m.stop os, m.route r, m.trip t, m.stop_time ost, m.calendar_date cd WHERE os.stop_id = $# AND os.agency_id = $# AND r.agency_id = os.agency_id AND t.agency_id = os.agency_id AND ost.agency_id = os.agency_id AND cd.agency_id = os.agency_id AND os.stop_id = ost.stop_id AND t.trip_id = ost.trip_id AND r.route_id = t.route_id AND t.service_id = cd.service_id AND cd.exception_date = $# AND cd.exception_type = # ORDER BY departure_time_relative ASC 
SELECT pg_catalog.format_type (#::pg_catalog.oid, #)
SELECT pg_catalog.pg_get_viewdef (#::pg_catalog.oid) AS viewdef
SELECT pg_catalog.pg_is_in_recovery ()
SELECT pg_terminate_backend (pid) FROM pg_stat_activity WHERE pid < > pg_backend_pid () ;
SELECT pg_terminate_backend (pid) FROM pg_stat_activity WHERE query NOT LIKE #;
SELECT proretset, prosrc, probin, pg_catalog.pg_get_function_arguments (oid) AS funcargs, pg_catalog.pg_get_function_identity_arguments (oid) AS funciargs, pg_catalog.pg_get_function_result (oid) AS funcresult, proiswindow, provolatile, proisstrict, prosecdef, proleakproof, proconfig, procost, prorows, (SELECT lanname FROM pg_catalog.pg_language WHERE oid = prolang) AS lanname FROM pg_catalog.pg_proc WHERE oid = #::pg_catalog.oid
SELECT provider, label FROM pg_catalog.pg_shseclabel WHERE classoid = #::pg_catalog.regclass AND objoid = #
SELECT r.route_id, r.route_short_name, r.route_long_name FROM m.route r, m.agency a WHERE to_tsvector (#, r.route_short_name || # || r.route_long_name) @@ to_tsquery ($#) AND a.agency_id = $# 
SELECT r.route_long_name, r.route_short_name FROM m.route r, m.trip t WHERE t.trip_id = $# AND r.route_id = t.route_id AND t.agency_id = $# AND r.agency_id = t.agency_id 
SELECT region_id, region_name, region_server FROM m.region 
SELECT route_id FROM m.route WHERE route_short_name = # AND agency_id = #;
SELECT route_short_name FROM m.route WHERE agency_id = (SELECT agency_id FROM m.agency WHERE agency_id_id = # AND valid_now = #)
SELECT s.stop_id AS stop_id, s.stop_name, s.stop_lat, s.stop_lon, ceiling ((h.distance (#, #, s.stop_lat, s.stop_lon) /#) /#) AS walk_time FROM m.stop s WHERE s.stop_lat BETWEEN ($#-$#) AND ($#+$#) AND s.agency_id = $# AND s.stop_lon BETWEEN ($#-$#) AND ($#+$#) ORDER BY |/ (( (s.stop_lat- ($#) )^#+ (s.stop_lon- ($#) )^#) ) 
SELECT s.stop_name, s.stop_id, s.stop_lat, s.stop_lon FROM m.stop s, m.trip t, m.stop_time st WHERE t.trip_id = $# AND s.agency_id = $# AND t.agency_id = s.agency_id AND st.agency_id = s.agency_id AND st.trip_id = t.trip_id AND s.stop_id = st.stop_id AND st.incoming_point_polygon && #::POLYGON LIMIT #
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM about_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM account_role_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM account_verification_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM ad_click_record_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM agency_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM attachment_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM avl_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM avl_pred_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM calendar_date_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM calendar_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM call_log_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM comment_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM driver_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM entity_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM folder_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM frequency_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM notes_like_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM notes_message_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM observation_attachment_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM observation_comment_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM observation_driver_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM observation_entity_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM observation_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM observation_rider_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM observation_vehicle_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM password_reset_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM realtime_coverage_statistic_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM rider_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM route_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM shape_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM status_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM stop_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM stop_time_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM test_account_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM trace_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM transfer_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM trip_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM user_stop_history_id_seq
SELECT sequence_name, start_value, increment_by, CASE WHEN increment_by > # AND max_value = # THEN # WHEN increment_by < # AND max_value = # THEN # ELSE max_value END AS max_value, CASE WHEN increment_by > # AND min_value = # THEN # WHEN increment_by < # AND min_value = # THEN # ELSE min_value END AS min_value, cache_value, is_cycled FROM vehicle_id_seq
SELECT st.agency_id, st.id, st.trip_id, st.stop_sequence, e.intercept_time - h.seconds (#, #, #) FROM m.estimate e, m.stop_time st WHERE st.trip_id = # AND st.stop_id = # AND e.stop_time_id = st.id AND e.estimate_source = # AND st.agency_id = # AND e.agency_id = st.agency_id; 
SELECT t.tableoid, t.oid, t.relname AS indexname, pg_catalog.pg_get_indexdef (i.indexrelid) AS indexdef, t.relnatts AS indnkeys, i.indkey, i.indisclustered, i.indisreplident, t.relpages, c.contype, c.conname, c.condeferrable, c.condeferred, c.tableoid AS contableoid, c.oid AS conoid, pg_catalog.pg_get_constraintdef (c.oid, false) AS condef, (SELECT spcname FROM pg_catalog.pg_tablespace s WHERE s.oid = t.reltablespace) AS tablespace, array_to_string (t.reloptions, #) AS options FROM pg_catalog.pg_index i JOIN pg_catalog.pg_class t ON (t.oid = i.indexrelid) LEFT JOIN pg_catalog.pg_constraint c ON (i.indrelid = c.conrelid AND i.indexrelid = c.conindid AND c.contype IN () ) WHERE i.indrelid = #::pg_catalog.oid AND i.indisvalid AND i.indisready ORDER BY indexname
SELECT tableoid, oid, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = datdba) AS dba, pg_encoding_to_char (encoding) AS encoding, datcollate, datctype, datfrozenxid, datminmxid, (SELECT spcname FROM pg_tablespace t WHERE t.oid = dattablespace) AS tablespace, shobj_description (oid, #) AS description FROM pg_database WHERE datname = #
SELECT tableoid, oid, adnum, pg_catalog.pg_get_expr (adbin, adrelid) AS adsrc FROM pg_catalog.pg_attrdef WHERE adrelid = #::pg_catalog.oid
SELECT tableoid, oid, castsource, casttarget, castfunc, castcontext, castmethod FROM pg_cast ORDER BY #, #
SELECT tableoid, oid, cfgname, cfgnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = cfgowner) AS rolname, cfgparser FROM pg_ts_config
SELECT tableoid, oid, collname, collnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = collowner) AS rolname FROM pg_collation
SELECT tableoid, oid, conname, confrelid, pg_catalog.pg_get_constraintdef (oid) AS condef FROM pg_catalog.pg_constraint WHERE conrelid = #::pg_catalog.oid AND contype = #
SELECT tableoid, oid, dictname, dictnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = dictowner) AS rolname, dicttemplate, dictinitoption FROM pg_ts_dict
SELECT tableoid, oid, lanname, lanpltrusted, lanplcallfoid, laninline, lanvalidator, lanacl, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = lanowner) AS lanowner FROM pg_language WHERE lanispl ORDER BY oid
SELECT tableoid, oid, nspname, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = nspowner) AS rolname, nspacl FROM pg_namespace
SELECT tableoid, oid, opcname, opcnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = opcowner) AS rolname FROM pg_opclass
SELECT tableoid, oid, opfname, opfnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = opfowner) AS rolname FROM pg_opfamily
SELECT tableoid, oid, prsname, prsnamespace, prsstart::oid, prstoken::oid, prsend::oid, prsheadline::oid, prslextype::oid FROM pg_ts_parser
SELECT tableoid, oid, tmplname, tmplnamespace, tmplinit::oid, tmpllexize::oid FROM pg_ts_template
SELECT tableoid, oid, typname, typnamespace, typacl, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = typowner) AS rolname, typinput::oid AS typinput, typoutput::oid AS typoutput, typelem, typrelid, CASE WHEN typrelid = # THEN #:: #char # ELSE (SELECT relkind FROM pg_class WHERE oid = typrelid) END AS typrelkind, typtype, typisdefined, typname[#] = # AND typelem ! = # AND (SELECT typarray FROM pg_type te WHERE oid = pg_type.typelem) = oid AS isarray FROM pg_type
SELECT tgname, tgfoid::pg_catalog.regproc AS tgfname, pg_catalog.pg_get_triggerdef (oid, false) AS tgdef, tgenabled, tableoid, oid FROM pg_catalog.pg_trigger t WHERE tgrelid = #::pg_catalog.oid AND NOT tgisinternal
SELECT timestamp FROM s.aggregate ag, m.agency a WHERE a.agency_id = $# LIMIT #
SELECT trip_id FROM m.trip WHERE agency_id = # AND trip_id LIKE # AND (block_id = # OR block_id = #) 
SELECT user_id FROM m.agency WHERE valid_now = # AND agency_id_id = #;
SELECT ve.id, ve.user_id FROM dv.account_verification ve, dv.account ac WHERE ac.email = $# AND ve.user_id = ac.id AND ve.code = $# AND ve.timestamp + interval # > = NOW ()
SELECT x.tableoid, x.oid, x.extname, n.nspname, x.extrelocatable, x.extversion, x.extconfig, x.extcondition FROM pg_extension x JOIN pg_namespace n ON n.oid = x.extnamespace
UPDATE dv.account SET neighborhood = $#, nearbyListView = $#, needASeat = $#, isBlind = $#, isCane = $#, isCognitive = $#, isDeaf = $#, isWheelChair = $#, isOtherDisability = $#, firstName = $#, lastName = $#, email = $# WHERE id = $#
UPDATE dv.notes_like SET stat_timestamp = NOW () WHERE stat_timestamp IS #; 
UPDATE dv.notes_message SET category = # WHERE category = # AND stat_timestamp < NOW () ;
UPDATE dv.notes_message SET deleted = # WHERE user_id = # AND agency_id_id = # AND notice_id = # AND route_id = #
UPDATE dv.notes_message SET deleted = #, end_date = # WHERE agency_id_id = # AND notice_id = # AND stop_id = #;
UPDATE dv.notes_message nm SET deleted = # FROM m.agency a WHERE nm.user_id = a.user_id AND nm.end_date < CURRENT_DATE;
UPDATE dv.notes_message nm SET deleted = # FROM m.agency a WHERE nm.user_id = a.user_id AND nm.end_date < NOW () ;
UPDATE m.agency SET valid_now = # WHERE agency_id = #;
UPDATE m.stop_time AS st SET departure_time_hour = #, departure_time_minute = #, estimate_source = # FROM m.stop s WHERE st.agency_id = # AND s.agency_id = st.agency_id AND st.stop_id = s.stop_id AND s.stop_code = # AND st.trip_id = # 
UPDATE m.stop_time AS st SET departure_time_hour = h.to_hours (e.intercept_time - aer.error) , departure_time_minute = h.to_minutes (e.intercept_time - aer.error) , estimate_source = # FROM m.estimate e, r.avl_error aer WHERE st.agency_id = e.agency_id AND e.agency_id = aer.agency_id AND e.stop_time_id = st.id AND e.estimate_source = # AND st.trip_id = aer.trip_id AND aer.stop_sequence < = st.stop_sequence AND st.stop_sequence - aer.stop_sequence < #; 
deleted, notice_id, agency_id_id, message_url, start_date, end_date) TO stdout;
select #
select * from m.region
select a.agency_id, a.agency_id_id, agency_name, agency_phone, ra.agency_lat, ra.agency_lon from m.agency a, m.region_agency ra where a.region_id = $# and a.agency_id_id = ra.agency_id_id and a.valid_now = # order by agency_id
select min (d.start_date) from m.calendar d where d.agency_id = c.agency_id) )) ) < = (SELECT extract (epoch FROM now () )) AND ( (SELECT extract (epoch FROM (select max (d.end_date+#) from m.calendar d where d.agency_id = c.agency_id) )) ) > = (SELECT extract (epoch FROM now () )) ; 
select nm.trip_id, nm.id AS message_id, nm.message, nm.timestamp, nm.category, a.firstname AS first_name, a.lastname AS last_name from dv.notes_message nm, dv.account a, (SELECT dv.trip_id, MAX (dv.timestamp) AS maximum FROM dv.notes_message dv WHERE dv.agency_id IN () AND dv.trip_id IN () AND dv.category = # GROUP BY dv.trip_id) as nmmax WHERE nm.deleted IS # AND a.id = nm.user_id AND nm.trip_id = nmmax.trip_id AND nm.timestamp = nmmax.maximum AND nm.agency_id IN ()
select o.*, count (c.id) as cnt, a.agency_id_id from dv.observation o LEFT OUTER JOIN dv.observation_comment c ON (o.id = c.observation_id) LEFT OUTER JOIN m.agency a ON (o.agency_id = a.agency_id) group by o.id, o.agency_id, o.title, o.description, o.timestamp, o.incidentdate, o.incidenttime, o.account_id, o.about_id, o.anonymous, o.drivernumber, o.driverdescription, o.riderdescription, o.otherdescription, o.email, o.is_schedule, o.is_route, o.is_vehicle, o.is_driver, o.is_bus_stop, o.latitude, o.longitude, o.device_id, o.session_id, o.hidden, a.agency_id_id order by o.timestamp desc 
select quote_literal (x) from unnest (evttags) as t (x) ), #) as evttags, e.evtfoid::regproc as evtfname FROM pg_event_trigger e ORDER BY e.oid
select st.trip_id, st.stop_sequence, st.estimate_source, st.fullness, st.departure_time_hour, st.departure_time_minute, s.stop_lat, s.stop_lon, t.direction_id, t.route_id, r.route_short_name from m.stop AS s RIGHT JOIN m.stop_time AS st ON st.agency_id = s.agency_id AND st.stop_id = s.stop_id LEFT JOIN m.trip AS t ON t.agency_id = st.agency_id AND t.trip_id = st.trip_id LEFT JOIN m.route AS r ON t.agency_id = r.agency_id AND t.route_id = r.route_id WHERE st.estimate_source IN () AND st.agency_id = $# AND ( ((departure_time_hour * # + departure_time_minute) > = ($#-#) AND (departure_time_hour * # + departure_time_minute) < = ($#+#) ) OR ( (departure_time_hour * # + departure_time_minute) > = ($#-#) AND (departure_time_hour * # + departure_time_minute) < = ($#+#) )) order by st.stop_sequence
select stoptime0_.id as id4_, stoptime0_.agency_id as agency2_#_, stoptime0_.trip_id as trip3_#_, stoptime0_.arrival_time_hour as arrival4_#_, stoptime0_.arrival_time_minute as arrival5_#_, stoptime0_.departure_time_hour as departure6_#_, stoptime0_.departure_time_minute as departure7_#_, stoptime0_.estimate_source as estimate8_#_, stoptime0_.fullness as fullness4_, stoptime0_.stop_id as stop1#_#_, stoptime0_.stop_sequence as stop1#_#_, stoptime0_.stop_headsign as stop1#_#_, stoptime0_.pickup_type as pickup1#_#_, stoptime0_.drop_off_type as drop1#_#_, stoptime0_.shape_dist_traveled as shape1#_#_ from m.stop_time stoptime0_ where stoptime0_.trip_id = # and stoptime0_.agency_id = # order by stoptime0_.stop_sequence
select sum (trip_count) + # from m.trip_counter
select this_.agency_id as agency1_#_#_, this_.agency_id_id as agency2_#_#_, this_.agency_name as agency3_#_#_, this_.agency_url as agency4_#_#_, this_.agency_timezone as agency5_#_#_, this_.agency_lang as agency6_#_#_, this_.agency_phone as agency7_#_#_, this_.region_id as region8_#_#_ from m.agency this_ order by this_.agency_id desc
selected) > = #time # ($#) and #time # (time_selected) < = #time # ($#) AND h.distance (latitude, longitude, $#, $#) < =$#group by stop_id ORDER BY freq DESC LIMIT #
selected) TO stdout;
update m.stop_time set agency_id = #, trip_id = #, arrival_time_hour = #, arrival_time_minute = #, departure_time_hour = #, departure_time_minute = #, estimate_source = #, fullness = #, stop_id = #, stop_sequence = #, stop_headsign = #, pickup_type = #, drop_off_type = #, shape_dist_traveled = # where id = #
